(function() {
    var type_impls = Object.fromEntries([["nib",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-AbsDiffEq-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; AbsDiffEq for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseFloat,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Epsilon</a> = &lt;S as AbsDiffEq&gt;::Epsilon</h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_epsilon</a>() -&gt; &lt;S as AbsDiffEq&gt;::Epsilon</h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">abs_diff_eq</a>(\n    &amp;self,\n    other: &amp;Vector3&lt;S&gt;,\n    epsilon: &lt;S as AbsDiffEq&gt;::Epsilon,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::Epsilon) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>AbsDiffEq::abs_diff_eq</code>].</div></details></div></details>","AbsDiffEq","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Vector3%3CS%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Add%3C%26Vector3%3CS%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a Vector3&lt;S&gt;&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;'a Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a Vector3<S>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Add-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-AddAssign-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Vector3&lt;S&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Array-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Array for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Element\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Element</a> = S</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of elements in the array type <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value\" class=\"method trait-impl\"><a href=\"#method.from_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_value</a>(scalar: S) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Construct a vector from a single value, replicating it. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sum</a>(self) -&gt; S<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = S&gt;,</div></h4></section></summary><div class='docblock'>The sum of the elements of the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">product</a>(self) -&gt; S<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = S&gt;,</div></h4></section></summary><div class='docblock'>The product of the elements of the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method trait-impl\"><a href=\"#method.is_finite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_finite</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,</div></h4></section></summary><div class='docblock'>Whether all elements of the array are finite</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method trait-impl\"><a href=\"#method.as_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.pointer.html\">*const </a>Self::Element</h4></section></summary><div class='docblock'>Get the pointer to the first element of the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method trait-impl\"><a href=\"#method.as_mut_ptr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.pointer.html\">*mut </a>Self::Element</h4></section></summary><div class='docblock'>Get a mutable pointer to the first element of the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_elements\" class=\"method trait-impl\"><a href=\"#method.swap_elements\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">swap_elements</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>, j: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Swap the elements at indices <code>i</code> and <code>j</code> in-place.</div></details></div></details>","Array","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-AsMut%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[S; 3]>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-AsMut%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<(S, S, S)>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[S; 3]>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<(S, S, S)>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Bounded-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, S&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.216/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Vector3&lt;S&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.216/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.216/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CS%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Div%3CS%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;S&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: S) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<S>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CS%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CS%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;S&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scalar: S)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<S>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ElementWise%3CS%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-ElementWise%3CS%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; ElementWise&lt;S&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.add_element_wise\" class=\"method trait-impl\"><a href=\"#method.add_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_element_wise</a>(self, rhs: S) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.sub_element_wise\" class=\"method trait-impl\"><a href=\"#method.sub_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_element_wise</a>(self, rhs: S) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.mul_element_wise\" class=\"method trait-impl\"><a href=\"#method.mul_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_element_wise</a>(self, rhs: S) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.div_element_wise\" class=\"method trait-impl\"><a href=\"#method.div_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_element_wise</a>(self, rhs: S) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.rem_element_wise\" class=\"method trait-impl\"><a href=\"#method.rem_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_element_wise</a>(self, rhs: S) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.add_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.add_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign_element_wise</a>(&amp;mut self, rhs: S)</h4></section><section id=\"method.sub_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.sub_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign_element_wise</a>(&amp;mut self, rhs: S)</h4></section><section id=\"method.mul_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.mul_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_assign_element_wise</a>(&amp;mut self, rhs: S)</h4></section><section id=\"method.div_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.div_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_assign_element_wise</a>(&amp;mut self, rhs: S)</h4></section><section id=\"method.rem_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.rem_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_assign_element_wise</a>(&amp;mut self, rhs: S)</h4></section></div></details>","ElementWise<S>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ElementWise-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-ElementWise-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; ElementWise for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.add_element_wise\" class=\"method trait-impl\"><a href=\"#method.add_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_element_wise</a>(self, rhs: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.sub_element_wise\" class=\"method trait-impl\"><a href=\"#method.sub_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_element_wise</a>(self, rhs: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.mul_element_wise\" class=\"method trait-impl\"><a href=\"#method.mul_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_element_wise</a>(self, rhs: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.div_element_wise\" class=\"method trait-impl\"><a href=\"#method.div_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_element_wise</a>(self, rhs: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.rem_element_wise\" class=\"method trait-impl\"><a href=\"#method.rem_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_element_wise</a>(self, rhs: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section><section id=\"method.add_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.add_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign_element_wise</a>(&amp;mut self, rhs: Vector3&lt;S&gt;)</h4></section><section id=\"method.sub_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.sub_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign_element_wise</a>(&amp;mut self, rhs: Vector3&lt;S&gt;)</h4></section><section id=\"method.mul_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.mul_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">mul_assign_element_wise</a>(&amp;mut self, rhs: Vector3&lt;S&gt;)</h4></section><section id=\"method.div_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.div_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">div_assign_element_wise</a>(&amp;mut self, rhs: Vector3&lt;S&gt;)</h4></section><section id=\"method.rem_assign_element_wise\" class=\"method trait-impl\"><a href=\"#method.rem_assign_element_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rem_assign_element_wise</a>(&amp;mut self, rhs: Vector3&lt;S&gt;)</h4></section></div></details>","ElementWise","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a>&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a>) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[S; 3]>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-From%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a>) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(S, S, S)>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.83.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Index%3CRangeFull%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Index%3Cusize%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = S</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;'a S</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<usize>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRange%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3CRange%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<Range<usize>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<RangeFrom<usize>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRangeFull%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3CRangeFull%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<RangeFull>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<RangeTo<usize>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3Cusize%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-IndexMut%3Cusize%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;'a mut S</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<usize>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InnerSpace-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-InnerSpace-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; InnerSpace for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.dot\" class=\"method trait-impl\"><a href=\"#method.dot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dot</a>(self, other: Vector3&lt;S&gt;) -&gt; S</h4></section></summary><div class='docblock'>Vector dot (or inner) product.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.angle\" class=\"method trait-impl\"><a href=\"#method.angle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">angle</a>(self, other: Vector3&lt;S&gt;) -&gt; Rad&lt;S&gt;<div class=\"where\">where\n    S: BaseFloat,</div></h4></section></summary><div class='docblock'>Returns the angle between two vectors in radians.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.magnitude2\" class=\"method trait-impl\"><a href=\"#method.magnitude2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">magnitude2</a>(self) -&gt; Self::Scalar</h4></section></summary><div class='docblock'>Returns the squared magnitude. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_on\" class=\"method trait-impl\"><a href=\"#method.project_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">project_on</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the\n<a href=\"https://en.wikipedia.org/wiki/Vector_projection\">vector projection</a>\nof the current inner space projected onto the supplied argument.</div></details></div></details>","InnerSpace","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Into%3C%5BS;+3%5D%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.array.html\">[S; 3]</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<[S; 3]>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Into%3C(S,+S,+S)%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a>&gt; for Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.tuple.html\">(S, S, S)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(S, S, S)>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MetricSpace-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-MetricSpace-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; MetricSpace for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Metric\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Metric\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Metric</a> = S</h4></section></summary><div class='docblock'>The metric to be returned by the <code>distance</code> function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance2\" class=\"method trait-impl\"><a href=\"#method.distance2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">distance2</a>(self, other: Vector3&lt;S&gt;) -&gt; S</h4></section></summary><div class='docblock'>Returns the squared distance. <a>Read more</a></div></details></div></details>","MetricSpace","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CS%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Mul%3CS%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;S&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: S) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<S>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CS%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CS%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;S&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scalar: S)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<S>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Neg-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&lt;Output = S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Vector3&lt;S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-RelativeEq-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; RelativeEq for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseFloat,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_max_relative</a>() -&gt; &lt;S as AbsDiffEq&gt;::Epsilon</h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;Vector3&lt;S&gt;,\n    epsilon: &lt;S as AbsDiffEq&gt;::Epsilon,\n    max_relative: &lt;S as AbsDiffEq&gt;::Epsilon,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::Epsilon,\n    max_relative: Self::Epsilon,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>RelativeEq::relative_eq</code>].</div></details></div></details>","RelativeEq","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CS%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Rem%3CS%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;S&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: S) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<S>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CS%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-RemAssign%3CS%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;S&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, scalar: S)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<S>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.216/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26Vector3%3CS%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Sub%3C%26Vector3%3CS%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a Vector3&lt;S&gt;&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;'a Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'a Vector3<S>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Sub-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-SubAssign-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Vector3&lt;S&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.83.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Vector3%3CS%3E%3E-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Sum%3C%26Vector3%3CS%3E%3E-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a Vector3&lt;S&gt;&gt; for Vector3&lt;S&gt;<div class=\"where\">where\n    S: 'a + BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Vector3&lt;S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Vector3&lt;S&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a Vector3<S>>","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Sum-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Vector3&lt;S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Vector3&lt;S&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-UlpsEq-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; UlpsEq for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseFloat,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ulps_eq</a>(\n    &amp;self,\n    other: &amp;Vector3&lt;S&gt;,\n    epsilon: &lt;S as AbsDiffEq&gt;::Epsilon,\n    max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::Epsilon, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of [<code>UlpsEq::ulps_eq</code>].</div></details></div></details>","UlpsEq","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Vector3&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>(x: S, y: S, z: S) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new vector, using the provided values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map</a>&lt;U, F&gt;(self, f: F) -&gt; Vector3&lt;U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(S) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Perform the given operation on each field in the vector, returning a new point\nconstructed from the operations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">zip</a>&lt;S2, S3, F&gt;(self, v2: Vector3&lt;S2&gt;, f: F) -&gt; Vector3&lt;S3&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(S, S2) -&gt; S3,</div></h4></section></summary><div class=\"docblock\"><p>Construct a new vector where each component is the result of\napplying the given operation to each pair of components of the\ngiven vectors.</p>\n</div></details></div></details>",0,"nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Vector3&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Component-wise casting to another type.</p>\n</div></details></div></details>",0,"nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.unit_x\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unit_x</a>() -&gt; Vector3&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>A unit vector in the <code>x</code> direction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unit_y\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unit_y</a>() -&gt; Vector3&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>A unit vector in the <code>y</code> direction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unit_z\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unit_z</a>() -&gt; Vector3&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>A unit vector in the <code>z</code> direction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cross\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cross</a>(self, other: Vector3&lt;S&gt;) -&gt; Vector3&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the cross product of the vector and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extend</a>(self, w: S) -&gt; Vector4&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>Vector4</code>, using the <code>x</code>, <code>y</code> and <code>z</code> values from this vector, and the\nprovided <code>w</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">truncate</a>(self) -&gt; Vector2&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>Vector2</code>, dropping the <code>z</code> value.</p>\n</div></details></div></details>",0,"nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VectorSpace-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-VectorSpace-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; VectorSpace for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Scalar</a> = S</h4></section></summary><div class='docblock'>The associated scalar.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method trait-impl\"><a href=\"#method.lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lerp</a>(self, other: Self, amount: Self::Scalar) -&gt; Self</h4></section></summary><div class='docblock'>Returns the result of linearly interpolating the vector\ntowards <code>other</code> by the specified amount.</div></details></div></details>","VectorSpace","nib::types::PixelValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Zero-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: BaseNum,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Vector3&lt;S&gt;</h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","nib::types::PixelValue"],["<section id=\"impl-Copy-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","nib::types::PixelValue"],["<section id=\"impl-Eq-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Vector3&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","nib::types::PixelValue"],["<section id=\"impl-StructuralPartialEq-for-Vector3%3CS%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Vector3%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Vector3&lt;S&gt;</h3></section>","StructuralPartialEq","nib::types::PixelValue"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[97502]}